/************************************************************/
/* HTLExportPro_ImageExport.ulp                             */
/* Exports images of what the PCB will look like            */
/************************************************************/
/* (c) Copyright 2011, Bernhard Wörndl-Aichriedler          */
/* E-Mail: bwa@berniwa.com                                  */
/* Homepage: www.berniwa.com                                */
/************************************************************/
/* Letzte Änderung am 18.02.2011                            */
/* Version 1                                                */
/************************************************************/

#include "Include_FastExecute.ulp";
#include "Include_Misc.ulp";

//string defaultLayerStackup7 = "48t 49t 19t 47t 20t 46t 23 27 25 59 57 55 53 50 51 21 44t 45t 37 35 31 29 33 39 41 43t 18t 17t 1-16 17b 18b 43b 42 40 34 30 32 36 38 45b 44b 22 52 54 56 58 60 26 28 24 46b 20b 47b 19b 49b 48b 61-99";
//string LayerStackup9 = "20 51 52 29 30 21 22 25 26 27 28 1 16 17 18";
string getFilename(string basename, string ends_with)
{
	return filesetext(basename,ends_with);
}


void exportImages(int imgExport, int exportBot, string botImage, int exportTop, string topImage, int resolution, int crop, int mirror, string colorPcb, string colorCopper, string colorSilkscreen, string colorPlating, string tsilcLayers, string bsilcLayers)
{
	string cmd = "";

	string bname = "";
	board(B)
	{
		bname = B.name;
	}
	string layerV9="";

	if(EAGLE_VERSION>=9){
		cmd += "SET PALETTE WHITE;\n";
		cmd += "SET COLOR_LAYER 123 20;\n";
		cmd += "SET COLOR_LAYER 124 22;\n";
		cmd += "SET COLOR_LAYER 127 8;\n";
		cmd += "SET PALETTE 22 " + colorPcb + ";\n";
		cmd += "SET Option.LayerSequence 124;\n";
		layerV9= "123 124 127";
	}
	else{
		cmd += "SET PALETTE COLORED;\n";
		cmd += "SET PALETTE 0 " + colorPcb + ";\n";
	}

	cmd += "SET COLOR_LAYER 1 16;\n";
	cmd += "SET COLOR_LAYER 16 17;\n";
	cmd += "SET COLOR_LAYER 17 16;\n";
	cmd += "SET COLOR_LAYER 18 16;\n";
	cmd += "SET COLOR_LAYER 29 18;\n";
	cmd += "SET FILL_LAYER 29 solid;\n";
	cmd += "SET COLOR_LAYER 30 18;\n";
	cmd += "SET FILL_LAYER 30 solid;\n";
	//cmd += "SET COLOR_LAYER 124 18;\n";
	//cmd += "SET COLOR_LAYER 120 20;\n";
	cmd += "SET COLOR_LAYER 26 21;\n";
	//cmd += "SET COLOR_LAYER 121 21;\n";
	cmd += "SET COLOR_LAYER 21 21;\n";
	cmd += "SET COLOR_LAYER 25 21;\n";
	cmd += "SET COLOR_LAYER 27 21;\n";
	cmd += "SET COLOR_LAYER 51 21;\n";
	//cmd += "SET COLOR_LAYER 122 21;\n";
	cmd += "SET COLOR_LAYER 22 21;\n";
	cmd += "SET COLOR_LAYER 26 21;\n";
	cmd += "SET COLOR_LAYER 28 21;\n";
	cmd += "SET COLOR_LAYER 52 21;\n";
	cmd += "SET COLOR_LAYER 20 20;\n";

	//cmd += "SET COLOR_LAYER 125 18;\n";
	//cmd += "SET COLOR_LAYER 126 18;\n";
	//cmd += "SET COLOR_LAYER 127 20;\n";

	cmd += "SET PALETTE 16 " + colorCopper + ";\n";
	cmd += "SET PALETTE 17 " + colorCopper + ";\n";
	cmd += "SET PALETTE 18 " + colorPlating + ";\n";
	cmd += "SET PALETTE 20 0xFF000000;\n";
	cmd += "SET PALETTE 21 " + colorSilkscreen + ";\n";
	cmd += "SET PALETTE 8 0xFFFFFFFF;\n";

	if(EAGLE_VERSION > 5 || (EAGLE_VERSION == 5 && EAGLE_RELEASE >= 11) ) //Support for SET CONFIRM form Eagle 5.11 on
	{
		cmd += "SET CONFIRM YES;\n";
	}

	if(exportTop)
	{
		cmd += "DISPLAY NONE;DISPLAY 1 18 29 "+tsilcLayers+" "+layerV9+";\n";
		if (imgExport) {
			sprintf(cmd, "%s EXPORT IMAGE '%s' %d;\n", cmd, topImage, resolution);
		}
	}
	if(exportBot)
	{
		cmd += "DISPLAY NONE;DISPLAY 16 18 30 "+bsilcLayers+" "+layerV9+";\n";
		if (imgExport) {
			sprintf(cmd, "%s EXPORT IMAGE '%s' %d;\n", cmd, botImage, resolution);
		}
	}


	if(EAGLE_VERSION > 5 || (EAGLE_VERSION == 5 && EAGLE_RELEASE >= 11) ) //Support for SET CONFIRM form Eagle 5.11 on
	{
		cmd += "SET CONFIRM NO;\n";
	}

	//cmd += "SET PALETTE 0 0xFFFFFFFF;\n";

	cmd += "SET COLOR_LAYER 1 4;\n";
	cmd += "SET COLOR_LAYER 16 1;\n";
	cmd += "SET COLOR_LAYER 17 2;\n";
	cmd += "SET COLOR_LAYER 18 2;\n";
	

	string layers = "";

	board(B)
	{
		
		B.layers(L)
		{
			if(L.visible)
			{
				sprintf(layers, layers + " %d", L.number);
			}
		}
	}

	cmd += "DISPLAY NONE; DISPLAY " + layers + ";\n";

	if(palette(-1) == PALETTE_BLACK)
	{
		cmd += "SET PALETTE BLACK;\n";
	}
	else if(palette(-1) == PALETTE_WHITE)
	{
		cmd += "SET PALETTE WHITE;\n";
	}
	else
	{
		cmd += "SET PALETTE COLORED;\n";
	}

	cmd += "SET FILL_LAYER 29 LtSlash;\n";
	cmd += "SET FILL_LAYER 30 BkSlash;\n";
	
	if(exportBot && crop && imgExport)
	{
		sprintf(cmd, "%s RUN %sCropColor.ulp '%s' %d '%s';\n", cmd, getUlpDir("Include_"), botImage, resolution,filesetext(bname,".bat"));
	}
	if(exportTop && crop && imgExport)
	{
		sprintf(cmd, "%s RUN %sCropColor.ulp '%s' %d '%s';\n", cmd, getUlpDir("Include_"), topImage, resolution,filesetext(bname,".bat"));
	}

	if(exportBot && mirror && imgExport)
	{
		sprintf(cmd, "%s RUN %sMirrorColor.ulp '%s' '%s';\n", cmd, getUlpDir("Include_"), botImage,filesetext(bname,".bat"));
	}	
	
	executeAndExit(cmd);
}


exportImages(strtol(argv[12]),strtol(argv[2]),argv[1],strtol(argv[4]),argv[3],strtol(argv[5]),strtol(argv[6]),strtol(argv[7]), argv[8], argv[9], argv[10], argv[11], argv[13], argv[14]);
